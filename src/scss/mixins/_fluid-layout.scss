// Flex layout
@mixin flex-layout($direction: row, $horizontal-layout: flex-start, $portrait-layout: initial, $is-wrap: nowrap) {
  display: flex;
  flex-wrap: wrap;
  flex-direction: $direction;

  @if $direction == "row" {
    justify-content: $horizontal-layout;
    align-items: $portrait-layout;
  } @else if $direction == "column" {
    justify-content: $portrait-layout;
    align-items: $horizontal-layout;
    flex-wrap: $is-wrap;
  }
}

// Render the corresponding css style
@mixin fluidder($values, $property: font-size, $mobile-origin: null) {
  @if $values {
    $val-desktop: fluid-val($values);
    $val-desktop-max: px2calculations($values, $is-max: "max");
    $val-origin: if($mobile-origin, px2calculations($mobile-origin), px2calculations($values));

    #{$property}: $val-origin;

    @include mobile {
      #{$property}: $val-origin;
    }

    @include tablet-up {
      #{$property}: $val-desktop;
    }

    @include max-screen-only {
      #{$property}: $val-desktop-max;
    }
  }
}

@mixin ch-posi {
  &.x-flex-end {
    justify-content: flex-end;
  }
  &.x-flex-start {
    justify-content: flex-start;
  }
  &.x-space-between {
    justify-content: space-between;
  }
  &.x-center {
    justify-content: center;
  }
}
