@use "sass:math";

// Functions
// px2calculations
@function px2calculations($dividend, $divisor: $font-size-root, $convertUnit: "rem") {
  $map-unit-val: map-get($unit-map, $convertUnit);
  $map-unit-val: if($map-unit-val and $map-unit-val > 0, $map-unit-val, 0);
  $res: "";

  @each $item in $dividend {
    @if $item == 0 {
      $res: $res + " 0";
    } @else {
      $res: $res + " " + math.div($item, $divisor) * $map-unit-val;
    }
  }

  // Remove first space
  @return unquote(str-slice($res, 2));
}

// rem + vw
@function fluid-val($rootSize: $font-size-root, $max-width: $content-width, $fluidConvertUnit: "rem") {
  $res: "";

  @each $item in $rootSize {
    @if $item == 0 {
      $res: $res + " 0";
    } @else {
      $min-width: math.div($item, $coefficient-of-variation);
      $value: $item - $min-width;
      $extra-vw: math.div(abs($value), $max-width) * map-get($unit-map, "vw");
      $res: $res + " " + calc(
        (#{px2calculations(if($item >= 0, $min-width, -$min-width), $convertUnit: $fluidConvertUnit)} +
        #{$extra-vw}) * if($item >= 0, 1, -1)
      );
    }
  }

  // Remove first space
  @return unquote(str-slice($res, 2));
}
