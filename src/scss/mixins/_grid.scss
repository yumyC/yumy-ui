@use "sass:math";

// Grid system
@mixin make-row($gutter-x: $grid-gutter-width, $gutter-y: $grid-gutter-y-width) {
  @include flex-layout;
  @include fluidder(-$gutter-y, margin-top);

  margin-right: calc(#{fluid-val($gutter-x)} * -.5);
  margin-left: calc(#{fluid-val($gutter-x)} * -.5);
}

@mixin make-col-ready($gutter-x: $grid-gutter-width, $gutter-y: $grid-gutter-y-width) {
  @include fluidder($gutter-y, margin-top);

  flex-shrink: 0;
  max-width: 100%;
  padding-left: calc(#{fluid-val($gutter-x)} * .5);
  padding-right: calc(#{fluid-val($gutter-x)} * .5);
}

@mixin make-col($size: false, $columns: $grid-columns) {
  @if $size {
    flex: 0 0 auto;
    width: percentage(math.div($size, $columns));
  } @else {
    flex: 1 1 0;
    max-width: 100%;
  }
}

@mixin make-col-auto() {
  flex: 0 0 auto;
  width: auto;
}

@mixin make-col-offset($size, $columns: $grid-columns) {
  $num: math.div($size, $columns);

  margin-left: if($num == 0, 0, percentage($num));
}

@mixin row-cols($count) {
  > * {
    flex: 0 0 auto;
    width: math.div(100%, $count);
  }
}

@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {
  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    @include media-breakpoint-up($breakpoint, $breakpoints) {
      .col#{$infix} {
        flex: 1 0 0%;
      }

      .row-cols#{$infix}-auto > * {
        @include make-col-auto;
      }

      @if $grid-row-columns > 0 {
        @for $i from 1 through $grid-row-columns {
          .row-cols#{$infix}-#{$i} {
            @include row-cols($i);
          }
        }
      }

      .col#{$infix}-auto {
        @include make-col-auto;
      }

      @if $columns > 0 {
        @for $i from 1 through $columns {
          .col#{$infix}-#{$i} {
            @include make-col($i, $columns);
          }
        }

        @for $i from 0 through ($columns - 1) {
          @if not ($infix == "" and $i == 0) {
            .offset#{$infix}-#{$i} {
              @include make-col-offset($i, $columns);
            }
          }
        }
      }
    }
  }
}

@mixin default-row($gutter-x: $grid-gutter-width, $gutter-y: $grid-gutter-y-width) {
  .row {
    @include make-row($gutter-x, $gutter-y);
    > * {
      @include make-col-ready($gutter-x, $gutter-y);
    }

    @include ch-posi;
  }
}
